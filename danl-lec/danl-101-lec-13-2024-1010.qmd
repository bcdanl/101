---
title: Lecture 13
subtitle: Nobel Prize for Machine Learning; Midterm I Review
format:
  clean-revealjs:
    self-contained: false
    chalkboard: true
    incremental: false
    code-annotations: hover
    scrollable: false

    # logo: logo-title-slide.png
author:
  - name: Byeong-Hak Choe
    email: bchoe@geneseo.edu
    affiliations: SUNY Geneseo
date: 2024-10-03
execute: 
  eval: true
  echo: false
callout-icon: false

from: markdown+emoji
include-after-body: target-hover.html # effect.html

# bibliography: refs.bib
---


```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)


theme_set(theme_fivethirtyeight()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(angle = 0,
                               size = rel(1.5),
                               margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(angle = 0,
                               size = rel(1.5),
                               margin = margin(0,10,0,0)),
                axis.text.x = element_text(size = rel(1.5)),
                axis.text.y = element_text(size = rel(1.5)),
                strip.text = element_text(size = rel(1.5)),
                legend.position = "top",
                legend.text = element_text(size = rel(1.5)),
                legend.title = element_text(size = rel(1.5))
                )
          )
```



## Nobel Prize in Physics and Chemistry in 2024

The Royal Swedish Academy of Sciences has decided to award the 2024 Nobel Prize in Physics to U.S. scientist John J. Hopfield and British-Canadian Geoffrey E. Hinton for discoveries and inventions in ____________________, a field that enables computers to learn from and make predictions or decisions based on data, which paved the way for the artificial intelligence boom.



## Nobel Prize in Physics and Chemistry in 2024

:::: {.columns}
::: {.column width="50%"}

<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/nobel-2024-physics.jpeg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>

:::
::: {.column width="50%"}

<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/nobel-2024-chemistry.jpeg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>

:::
::::





## 2024 Nobel Prizes: Laying the Foundations for ML
### The Breakthroughs Behind AI’s Modern Revolution

:::{.incremental}
- Recognizes groundbreaking contributions to ML and AI
  - Hopfield and Hinton: Deep learning and neural network architecture
  - Hassabis and Jumper: AI and protein folding breakthroughs

- Why It Matters: These discoveries laid the foundation for the ML revolution we are living through today

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
### Deep Learning

:::{.incremental}
- Geoffrey Hinton’s Innovations:
  - Developed backpropagation, a key algorithm for training **deep neural networks**

- Deep learning: Multi-layered networks that autonomously learn complex patterns

- Impact on AI:
  - Enabled machines to learn from data without explicit instructions
  - Core technology behind language models (like ChatGPT), image recognition, and more

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
### ML Today

:::{.incremental}
- The Scale of Modern AI:
  - Deep neural networks now contain billions to trillions of parameters
  - [Hugging Face](https://huggingface.co): Open-source community for ML and AI

- Applications: Voice assistants, self-driving cars, medical diagnostics, and so on.

- Importance of Data and Computing Power:
  - The explosion in data and cloud computing has fueled rapid progress in AI
  - AI models like GPT-4 are direct descendants of Hopfield and Hinton’s early work

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
###  Demis Hassabis’s Story: From Chess to AI Mastery



:::: {.columns}
::: {.column width="60%"}
<div style="text-align: center; width: 100%; margin: auto;">
  <img src="https://bcdanl.github.io/lec_figs/hassabis-games.jpg" style="width: 90%; margin-bottom: -20px;">
  <p style="font-style: bold;"></p>
</div>
:::

::: {.column width="40%"}

- Boardgame Master Enters the Protein Olympics:
- Early Life:
  - Started playing chess at age 4, achieved master level at 13
  - Transitioned to programming and video game development as a teenager

:::
::::


## 2024 Nobel Prizes: Laying the Foundations for ML
###  Demis Hassabis’s Story: From Chess to AI Mastery

:::{.incremental}

- Co-founded DeepMind in 2010, a company that revolutionized AI for boardgames

- DeepMind’s Global Attention:
  - Sold to Google in 2014
  - In 2016, DeepMind’s AI defeated the world champion of Go, a breakthrough in AI’s problem-solving abilities

- AI’s True Purpose for Hassabis:
  - Games were just a stepping stone to developing AI for more meaningful applications, like predicting protein structures

:::

## 2024 Nobel Prizes: Laying the Foundations for ML
### The Future of Machine Learning

:::{.incremental}

- What’s Next?:
  - AI is rapidly evolving, expanding into areas like business, economics, climate science, healthcare, personalized medicine, and so on.
  - Challenges include transparency, ethics, and responsible AI development

- Ethical Considerations:
  - How do we ensure AI benefits humanity and minimizes harm?

- Final Thoughts:
  - As AI continues to grow, it holds the potential to solve many of humanity’s greatest challenges

:::


# Midterm Exam I Review {background-color="#1c4982"}



<!-- ## Questions 10-13 -->
<!-- For **Questions 10-13**, consider the following data.frame, `netflix_data`, displayed below: -->
<!-- ```{r} -->
<!-- #| echo: false -->
<!-- #| eval: true -->
<!-- #| message: false -->
<!-- #| warning: false -->
<!-- library(dplyr) -->

<!-- netflix_data <- data.frame( -->
<!--   UserID = 1:10, -->
<!--   Age = c(25, 34, 28, 45, 23, 37, 31, 29, 41, 26),                   # Ratio -->
<!--   Gender = c("Female", "Male", "Female", "Male", "Female", "Male", "Female", "Male", "Male", "Female"),  # Nominal -->
<!--   SubscriptionPlan = factor(c("Basic", "Premium", "Standard", "Premium", "Basic", "Standard", "Premium", "Basic", "Standard", "Premium"), -->
<!--                             levels = c("Basic", "Standard", "Premium"), ordered = TRUE),                 # Ordinal -->
<!--   FavoriteGenre = c("Drama", "Comedy", "Action", "Horror", "Sci-Fi", "Romance", "Documentary", "Thriller", "Animation", "Fantasy"),  # Nominal -->
<!--   HoursWatched = c(15.5, 20.3, 12.0, 25.7, 8.2, 18.9, 22.5, 16.8, 19.4, 14.1),                   # Ratio -->
<!--   LastLoginTime = c(23.5, 8.2, 15.3, 21.0, 2.5, 13.7, 9.8, 18.4, 7.1, 12.6),                            # Interval (hours since midnight) -->
<!--   AccountMonths = c(12, 24, 6, 36, 4, 18, 30, 9, 15, 21),                                            # Ratio -->
<!--   Satisfaction = factor(c(5, 4, 3, 5, 2, 4, 5, 3, 4, 5), ordered = TRUE),                         # Ordinal -->
<!--   nDevices = c(2, 3, 1, 4, 1, 2, 3, 1, 2, 3),                                                    # Ratio -->
<!--   LastMovieRating = c(7.8, 6.5, 8.2, 5.9, 9.0, 7.1, 8.5, 6.8, 7.6, 8.0),                     # Interval -->
<!--   nProfiles = c(1, 2, 1, 3, 1, 2, 2, 1, 2, 3),                                                   # Ratio -->
<!--   Language = c("English", "Spanish", "English", "French", "English", "German", "English", "Spanish", "English", "French") -->
<!-- ) -->

<!-- DT::datatable(netflix_data, options = list(pageLength = 5)) -->
<!-- ``` -->



<!-- ## Questions 10-13 -->
<!-- ### Question 10 -->
<!-- What type of variable is `FavoriteGenre` in the dataset? -->

<!-- a. Nominal -->
<!-- b. Ordinal -->
<!-- c. Interval -->
<!-- d. Ratio -->

<!-- `FavoriteGenre`: User’s favorite genre -->


<!-- ## Questions 10-13 -->
<!-- ### Question 11 -->
<!-- What type of variable is `SubscriptionPlan` in the dataset? -->

<!-- a. Nominal -->
<!-- b. Ordinal -->
<!-- c. Interval -->
<!-- d. Ratio -->

<!-- `SubscriptionPlan`: Type of Netflix subscription -->


<!-- ## Questions 10-13 -->
<!-- ### Question 12 -->
<!-- What type of variable is `LastLoginTime` in the dataset? -->

<!-- a. Nominal -->
<!-- b. Ordinal -->
<!-- c. Interval -->
<!-- d. Ratio -->

<!-- `LastLoginTime`: Time of last login in hours since midnight -->



<!-- ## Questions 10-13 -->
<!-- ### Question 13 -->
<!-- What type of variable is `Satisfaction` in the dataset? -->

<!-- a. Nominal -->
<!-- b. Ordinal -->
<!-- c. Interval -->
<!-- d. Ratio -->


<!-- `Satisfaction`: User satisfaction rating (1 to 5 stars) -->





## Question 20
Which of the following R code correctly assigns the `nycflights13::airlines`  data.frame to the variable `df_airlines`? (Note that `df_airlines` is simply the name of the R object and can be any valid name in R.)

a. `nycflights13::airlines <- df_airlines`
b. `df_airlines <- nycflights13::airlines`
c. `nycflights13::airlines <= df_airlines`
d. `df_airlines == nycflights13::airlines`


## Question 21
Which of the following R code correctly calculate the number of elements in a vector `x <- c(1,2,3,4,5)`?

a. `nrow(x)`
b. `sd(x)`
c. `sum(x)`
d. `length(x)`



## Question 22

Write the R code to create a new variable called `result` and assign to it the sum of 5 and 7 in R.



## Question 22

Write the R code to create a new variable called `result` and assign to it the sum of 5 and 7 in R.





## Question 23

Given the data.frame `df` with variables `age` and `name`, which of the following expressions returns a vector containing the values in the `age` variable?

a. `df:age`
b. `df::age`
c. `df$age`
d. Both b and c




## Question 24

The expression `as.numeric("123")` will return the numeric value 123.

a. True
b. False




## Question 25

What is the result of the expression `(4 + 3) ^ 2` in R?

a. 3.5
b. 9
c. 14
d. 49


## Question 26

Given vectors `a <- c(1, 2, 3)` and `b <- c(4, 5, 6)`, what is the result of `a + b`?

a. `c(5, 7, 9)`
b. `c(4, 5, 6, 1, 2, 3)`
c. `c(1, 2, 3, 4, 5, 6)`
d. `Error`



## Question 27

Which of the following functions is part of the tidyverse package and is used to read a CSV file into a data.frame?

a. `read.csv()`
b. `read_csv()`
c. `read.table()`
d. `load()`




## Question 28

To use the function `skim()` from the `skimr` package, you first need to load the package using the R code ________.

a. `library(skimr)`
b. `load(skimr)`
c. `skimr`
c. `skimr::skim`




## Question 29

The `filter()` function can use both logical operators like `&` and comparison operators like `>` within the same logical condition.

a. True
b. False


## Question 30
Consider the following data.frame `df0`:
```{r}
#| echo: false
#| eval: true

df0 <- data.frame(
  x = c(1, 2, "Na"),
  y = c(4, NA, 6)
)

knitr::kable( df0  )
```

What is the result of `mean(df0$y)`?

a. 4
b. `NA`
c. 5
d. 6




## Questions 31-32
Consider the following data.frame `df` for **Questions 31-32**:

```{r}
#| echo: false
#| eval: true
df <- data.frame(
  id = 1:5,
  name = c("Alice", "Bob", "Charlie", "David", "Eve"),
  age = c(25, 30, 35, NA, 45),
  score = c(85, 90, 75, 80, NA)
)

knitr::kable( df )

```


## Question 31

Which of the following code snippets keeps observations where `score` is between 80 and 90 inclusive?

a. `df |> filter(score > 80 & score < 90)`
b. `df |> filter(score >= 80 & score <= 90)`
c. `df |> filter(score >= 80 | score <= 90)`
d. `df |> filter(score > 80 | score < 90)`


## Question 32

Which of the following expressions correctly keeps observations from `df` where the `age` variable has missing values?

a. `df |> filter(is.na(age))`
b. `df |> filter(!is.na(age))`
c. `df |> filter(age == NA)`
d. `df |> filter(age != NA)`
e. Both a and c
f. Both b and d



## Question 33

The `arrange()` function can sort data based on multiple variables.

a. True
b. False



## Question 34

Consider the following data.frame `df3`:


:::: {.columns}
::: {.column width="50%"}
```{r}
#| echo: false
#| eval: true

df3 <- data.frame(
  id = c(1, 2, 2, 3, 4, 4, 5),
  value = c(10, 20, 20, 30, 40, 40, 50)
)
knitr::kable(df3)
```

:::

::: {.column width="50%"}

Which of the following code snippets returns a data.frame of unique `id` values from `df3`?

a. `df3 |> select(id) |> distinct()`
b. `df3 |> distinct(value)`
c. `df3 |> distinct(id)`
d. Both A and C

:::
::::



## Question 35

Which of the following code snippets correctly renames the variable `age` to `years` in `df`?

a. `df |> rename(years = age)`
b. `df |> rename(age = years)`
c. `df |> rename("age" = "years")`
d. `df |> rename_variable(age = years)`



## Question 36

Which of the following code snippets correctly removes the `age` variable from `df`?

a. `df |> select(-age)`
b. `df |> select(-"age")`
c. `df |> select(!age)`
d. `df |> select(, -age)`
e. `df |> select(desc(age))`



## Question 37

Which of the following code snippets filters observations where `age` is not `NA`, then arranges them in descending order of `age`, and then selects the `name` and `age` variables?

a. `df |> filter(!is.na(age)) |> arrange(desc(age)) |> select(name, age)`
b. `df |> select(name, age) |> arrange(desc(age)) |> filter(!is.na(age))`
c. `df |> arrange(desc(age)) |> filter(!is.na(age)) |> select(name, age)`
d. `df |> filter(is.na(age)) |> arrange(age) |> select(name, age)`



## Question 38
Consider the two related data.frames, `df_1` and `df_2`:


:::: {.columns}
::: {.column width="50%"}
- `df_1`
```{r}
#| echo: false
#| eval: true
df_1 <- data.frame(
  id = c(1:2, 4),
  name = c("Alice", "Bob", "Olivia"),
  age = c(19, 21, 20)
)

knitr::kable( df_1)

```
:::

::: {.column width="50%"}
- `df_2`
```{r}
#| echo: false
#| eval: true

df_2 <- data.frame(
  id = 1:3,
  major = c("Economics", "Business Administration", "Data Analytics")
)

knitr::kable( df_2)

```
:::
::::


:::: {.columns}
::: {.column width="60%"}

<div style="display:block; margin:15px;"></div>

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false

df_1 <- data.frame(
  id = c(1:2, 4),
  name = c("Alice", "Bob", "Olivia"),
  age = c(19, 21, 20)
)


df_2 <- data.frame(
  id = 1:3,
  major = c("Economics", "Business Administration", "Data Analytics")
)


df_3 <- df_2 |> left_join(df_1)

knitr::kable( df_3)

```
:::
::: {.column width="40%"}

<div style="display:block; margin:15px;"></div>

a. `df_1 |> left_join(df_2)`
b. `df_2 |> left_join(df_1)`
c. both a and b
:::
::::



## Question 39
In R, what does the function `sd(x)` compute, and why can it be more useful than `var(x)`?





## Question 40
What is the primary limitation of Hadoop’s MapReduce, and how is it addressed by technologies like Apache Storm and Apache Spark?




